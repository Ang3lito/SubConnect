<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] Subconnect</title>
    <link rel="stylesheet" href="~/css/admin.css" asp-append-version="true" />
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
</head>
<body>
    <div class="main-content">
        <div class="tabs">
            <a href="@Url.Action("AdminPost", "Home")" class="tab">Post</a>
            <a href="/events" class="tab">Events</a>
            <a href="/files" class="tab">Files</a>
            <a href="/contact" class="tab">Contact</a>
            <a href="@Url.Action("AdminNotification", "Home")" class="tab">Notifications</a>
        </div>
        <div class="main-content">
            <div class="content">
                @RenderBody()
            </div>
        </div>
    </div>
    <div class="sidebar">
        <a href="@Url.Action("AdminProfile", "Home")" class="profile-link">
            <div class="profile">
                <img src="~/image/Profile/profile1.jpg" alt="Profile">
                <div class="profile-name">Cillian Murphy</div>
            </div>
        </a>
        <div class="admin-tools">
            <h3>Admin Tools</h3>
            <a href="@Url.Action("AdminUserManagement", "Home")" class="tab">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
                    <circle cx="12" cy="7" r="4"></circle>
                </svg>
                User Management
            </a>
            <a href="#" class="menu-item">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                    <line x1="16" y1="2" x2="16" y2="6"></line>
                    <line x1="8" y1="2" x2="8" y2="6"></line>
                    <line x1="3" y1="10" x2="21" y2="10"></line>
                </svg>
                Community Passes
            </a>
            <a href="#" class="menu-item">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path>
                    <polyline points="9 22 9 12 15 12 15 22"></polyline>
                </svg>
                Facility Management
            </a>
            <a href="#" class="menu-item">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <circle cx="12" cy="12" r="10"></circle>
                    <path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"></path>
                    <line x1="12" y1="17" x2="12.01" y2="17"></line>
                </svg>
                Service Requests
            </a>
            <a href="#" class="menu-item">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <line x1="18" y1="20" x2="18" y2="10"></line>
                    <line x1="12" y1="20" x2="12" y2="4"></line>
                    <line x1="6" y1="20" x2="6" y2="14"></line>
                </svg>
                Reports
            </a>
        </div>
        <div class="log-out">
            <a href="#">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"></path>
                    <polyline points="16 17 21 12 16 7"></polyline>
                    <line x1="21" y1="12" x2="9" y2="12"></line>
                </svg>
                Log Out
            </a>
        </div>
    </div>
</body>
</html>

<script>
        document.addEventListener('DOMContentLoaded', function () {
        const postInput = document.getElementById('postInput');
        const postModal = document.getElementById('postModal');
        const closeModal = document.querySelector('.close');
        const modalPostButton = document.getElementById('modalPostButton');
        const postContainer = document.getElementById('postContainer');
        const modalPostInput = document.getElementById('modalPostInput');

        // Prevent modal from opening when clicking the "Post" tab
        document.querySelectorAll('.tab').forEach(tab => {
            tab.addEventListener('click', function (event) {
                if (this.textContent.trim() === "Post") {
                    event.stopPropagation(); // Prevents event from bubbling up
                }
            });
        });

        // Open modal when clicking on the post input
        postInput.addEventListener('click', function (event) {
            // Ensure it only opens when clicking the input field, not the tab
            if (!event.target.closest('.tab')) {
                postModal.style.display = 'block';
            }
        });

        // Close modal when clicking the "X" button
        closeModal.addEventListener('click', function () {
            postModal.style.display = 'none';
        });

        // Close modal when clicking outside of it
        window.addEventListener('click', function (event) {
            if (event.target === postModal) {
                postModal.style.display = 'none';
            }
        });

        // Post the content
        modalPostButton.addEventListener('click', function () {
            const postContent = modalPostInput.value.trim();
            if (postContent) {
                const postElement = document.createElement('div');
                postElement.classList.add('post');
                postElement.innerHTML = `<div class="post-content">${postContent}</div>`;
                postContainer.prepend(postElement);
                modalPostInput.value = '';
                postModal.style.display = 'none';
            }
        });
    });

</script>

